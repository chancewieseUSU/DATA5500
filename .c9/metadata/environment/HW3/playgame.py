{"changed":true,"filter":false,"title":"playgame.py","tooltip":"/HW3/playgame.py","value":"import random      #brings in random for shuffling\n\n\nclass Card(): #creates cards class\n    def __init__(self, suit, face, value):\n        self.suit = suit\n        self.face = face\n        self.val = value\n        \n    def __str__(self):\n        return self.face + \" of \" + self.suit + \", value: \" + str(self.val)\n\n\nclass DeckOfCards():    #creates deck of cards class\n    def __init__(self):\n        self.deck = []\n        self.suits = [\"Hearts\", \"Diamonds\", \"Spades\", \"Clubs\"]\n        self.faces = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"Jack\", \"Queen\", \"King\", \"Ace\"]\n        self.values = [2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10, 11]\n        self.play_idx = 0\n        \n        for suit in self.suits:\n            i = 0\n            for i in range(len(self.faces)):\n                self.deck.append(Card(suit, self.faces[i], self.values[i]))\n                \n                \n    def shuffle_deck(self):     #allows us to shuffle deck\n        random.shuffle(self.deck)\n        self.play_idx = 0\n        \n    def print_deck(self):       #allows us to print deck\n        for card in self.deck:\n            print(card.face, \"of\", card.suit, end=\", \")\n        print(\"---\")\n        \n    def get_card(self):     #allows us to get a card from the deck\n        self.play_idx += 1\n        return self.deck[self.play_idx - 1]\n        \n        \n\n\n\n\nprint(\"Welcome to BlackJack!\\n\")\n\nplayagain = 'y'     # This runs the code again if they choose to\nuwincount = 0\ndwincount = 0\nwhile playagain == 'y':\n    \n    deck = DeckOfCards()    #sets deck to the deck of cards class\n    # print(\"Unshuffled Deck:\")\n    # deck.print_deck()       #prints unshuffled deck\n    deck.shuffle_deck()\n    # print(\"\\nShuffled Deck:\")\n    # deck.print_deck()       #prints shuffled deck\n    print()\n    \n    # deals two cards to the user\n    ucard = deck.get_card()\n    ucard2 = deck.get_card()\n    print()\n    print(\"Card number 1 is: \"+ucard.face+\" of \"+ucard.suit)\n    print(\"Card number 2 is: \"+ucard2.face+\" of \"+ucard2.suit)\n    ucardnumber = 2\n    \n    # calculates the user's hand score to begin\n    uscore = 0\n    uscore += ucard.val\n    uscore += ucard2.val\n    print(\"Your score is:\", uscore)\n    print()\n    \n    # calculates the user's number of aces to begin\n    uace = 0\n    if ucard.face == \"Ace\":\n        uace += 1\n    if ucard2.face == \"Ace\":\n        uace += 1\n    \n    # deals two cards to the dealer\n    dcard = deck.get_card()\n    dcard2 = deck.get_card()\n    dcardnumber = 2\n    \n    # calculates the dealer's hand score to begin\n    dscore = 0\n    dscore += dcard.val\n    dscore += dcard2.val\n    \n    # calculates the dealer's number of aces to begin\n    dace = 0\n    if dcard.face == \"Ace\":\n        dace += 1\n    if dcard2.face == \"Ace\":\n        dace += 1\n    \n    # while hit is 'y' and score <= 21, ask the user if they want to hit\n    hit = 'y'\n    while hit == 'y' and uscore < 21:\n        hit = input(\"Would you like a hit?(y/n): \")\n        print()\n        if hit == 'y':      #if they want a hit, give them another card\n            ucard_new = deck.get_card()\n            ucardnumber += 1        #keep track of how many cards they have\n            print(\"Card number\",ucardnumber,\"is: \"+ucard_new.face+\" of \"+ucard_new.suit)\n            if ucard_new.face == \"Ace\": #if the new card is an ace, add it to the count\n                uace += 1\n            uscore += ucard_new.val     #adjust total score\n            if uscore > 21 and uace > 0:        #if they have an ace and busted, drop them 10 and remove their ace from the count\n                uscore -= 10\n                uace -= 1\n            print(\"Your new score is:\", uscore)\n            print()\n        elif hit == 'n':        #if they don't want to hit, jump out of loop\n            break\n        else:       #if they didn't answer y or n, then try again\n            print(\"Invalid response. Please respond with 'y' or 'n'\")\n            hit = 'y' #resets the if loop to see if they want to hit\n    \n    if uscore > 21: #tell them if they busted\n        dwincount += 1\n        print(\"User busted, you lose!\")\n        \n    if uscore <=21:     #if they didn't bust, run the dealers cards\n        print(\"Dealer card number 1 is: \"+dcard.face+\" of \"+dcard.suit)     #reveal dealer cards\n        print(\"Dealer card number 2 is: \"+dcard2.face+\" of \"+dcard2.suit)\n        while dscore < 17:  #if they have less than 17, hit\n            dcard_new = deck.get_card()\n            dcardnumber += 1        #keep track of how many cards are hit\n            print(\"Dealer hits, card number\",dcardnumber,\"is: \"+dcard_new.face+\" of \"+dcard_new.suit)\n            if dcard_new.face == \"Ace\": #if the new card is an ace, add it to the count\n                dace += 1\n            dscore += dcard_new.val\n            if dscore > 21 and dace > 0: #if the dealer busts and has an ace, subtract 10 and remove an ace\n                dscore -= 10\n                dace -= 1\n        print(\"Dealer score is:\", dscore)   #reveal dealer score after hits\n        print()\n        \n        print(\"User Score:\", uscore)    #reveal final scores\n        print(\"Dealer Score:\", dscore)\n    if dscore > 21:     #if dealer busts, tell user they won\n        uwincount += 1\n        print(\"The dealer busted, you win!\")\n    if dscore >= uscore and dscore <= 21:   #if dealer is less than or equal to 21 and greater than or equal to the user, dealer wins\n        dwincount += 1\n        print(\"The dealer wins with a score of %d!\" % (dscore))\n    if uscore > dscore and uscore <= 21:    #if user is greater than dealer and less than or equal to 21, the user wins. I could've left this with an else but it helps me understand the logic\n        uwincount += 1\n        print(\"The user wins with a score of %d!\" % (uscore))\n    playagain = input(\"\\nWould you like to play again?(y/n): \") #if they play again, it'll run through the loop\n    \n    \n    \n    # I added this after but it counts the amount of wins that they both have and announces a final winner\nprint(\"\\n\\nUser win count:\",uwincount)\nprint(\"Dealer win count:\",dwincount)\nif uwincount > dwincount:\n    print(\"You are the overall winner!\")\nelif dwincount > uwincount:\n    print(\"The dealer is the overall winner!\")\nelse:\n    print(\"It's a tie!\")\n    \n    \nprint(\"\\n\\nThanks for playing!\")\n\n","undoManager":{"mark":-2,"position":3,"stack":[[{"start":{"row":0,"column":0},"end":{"row":128,"column":0},"action":"insert","lines":["from DeckOfCards import *   # Imports DeckOfCards and Cards to be used","","","print(\"Welcome to BlackJack!\\n\")","","playagain = 'y'     # This runs the code again if they choose to","uwincount = 0","dwincount = 0","while playagain == 'y':","    ","    deck = DeckOfCards()    #sets deck to the deck of cards class","    print(\"Unshuffled Deck:\")","    deck.print_deck()       #prints unshuffled deck","    deck.shuffle_deck()","    print(\"\\nShuffled Deck:\")","    deck.print_deck()       #prints shuffled deck","    print()","    ","    # deals two cards to the user","    ucard = deck.get_card()","    ucard2 = deck.get_card()","    print()","    print(\"Card number 1 is: \"+ucard.face+\" of \"+ucard.suit)","    print(\"Card number 2 is: \"+ucard2.face+\" of \"+ucard2.suit)","    ucardnumber = 2","    ","    # calculates the user's hand score to begin","    uscore = 0","    uscore += ucard.val","    uscore += ucard2.val","    print(\"Your score is:\", uscore)","    print()","    ","    # calculates the user's number of aces to begin","    uace = 0","    if ucard.face == \"Ace\":","        uace += 1","    if ucard2.face == \"Ace\":","        uace += 1","    ","    # deals two cards to the dealer","    dcard = deck.get_card()","    dcard2 = deck.get_card()","    dcardnumber = 2","    ","    # calculates the dealer's hand score to begin","    dscore = 0","    dscore += dcard.val","    dscore += dcard2.val","    ","    # calculates the dealer's number of aces to begin","    dace = 0","    if dcard.face == \"Ace\":","        dace += 1","    if dcard2.face == \"Ace\":","        dace += 1","    ","    # while hit is 'y' and score <= 21, ask the user if they want to hit","    hit = 'y'","    while hit == 'y' and uscore < 21:","        hit = input(\"Would you like a hit?(y/n): \")","        print()","        if hit == 'y':      #if they want a hit, give them another card","            ucard_new = deck.get_card()","            ucardnumber += 1        #keep track of how many cards they have","            print(\"Card number\",ucardnumber,\"is: \"+ucard_new.face+\" of \"+ucard_new.suit)","            if ucard_new.face == \"Ace\": #if the new card is an ace, add it to the count","                uace += 1","            uscore += ucard_new.val     #adjust total score","            if uscore > 21 and uace > 0:        #if they have an ace and busted, drop them 10 and remove their ace from the count","                uscore -= 10","                uace -= 1","            print(\"Your new score is:\", uscore)","            print()","        elif hit == 'n':        #if they don't want to hit, jump out of loop","            break","        else:       #if they didn't answer y or n, then try again","            print(\"Invalid response. Please respond with 'y' or 'n'\")","            hit = 'y' #resets the if loop to see if they want to hit","    ","    if uscore > 21: #tell them if they busted","        dwincount += 1","        print(\"User busted, you lose!\")","        ","    if uscore <=21:     #if they didn't bust, run the dealers cards","        print(\"Dealer card number 1 is: \"+dcard.face+\" of \"+dcard.suit)     #reveal dealer cards","        print(\"Dealer card number 2 is: \"+dcard2.face+\" of \"+dcard2.suit)","        while dscore < 17:  #if they have less than 17, hit","            dcard_new = deck.get_card()","            dcardnumber += 1        #keep track of how many cards are hit","            print(\"Dealer hits, card number\",dcardnumber,\"is: \"+dcard_new.face+\" of \"+dcard_new.suit)","            if dcard_new.face == \"Ace\": #if the new card is an ace, add it to the count","                dace += 1","            dscore += dcard_new.val","            if dscore > 21 and dace > 0: #if the dealer busts and has an ace, subtract 10 and remove an ace","                dscore -= 10","                dace -= 1","        print(\"Dealer score is:\", dscore)   #reveal dealer score after hits","        print()","        ","        print(\"User Score:\", uscore)    #reveal final scores","        print(\"Dealer Score:\", dscore)","    if dscore > 21:     #if dealer busts, tell user they won","        uwincount += 1","        print(\"The dealer busted, you win!\")","    if dscore >= uscore and dscore <= 21:   #if dealer is less than or equal to 21 and greater than or equal to the user, dealer wins","        dwincount += 1","        print(\"The dealer wins with a score of %d!\" % (dscore))","    if uscore > dscore and uscore <= 21:    #if user is greater than dealer and less than or equal to 21, the user wins. I could've left this with an else but it helps me understand the logic","        uwincount += 1","        print(\"The user wins with a score of %d!\" % (uscore))","    playagain = input(\"\\nWould you like to play again?(y/n): \") #if they play again, it'll run through the loop","    ","    ","    ","    # I added this after but it counts the amount of wins that they both have and announces a final winner","print(\"\\n\\nUser win count:\",uwincount)","print(\"Dealer win count:\",dwincount)","if uwincount > dwincount:","    print(\"You are the overall winner!\")","elif dwincount > uwincount:","    print(\"The dealer is the overall winner!\")","else:","    print(\"It's a tie!\")","    ","    ","print(\"\\n\\nThanks for playing!\")","",""],"id":13}],[{"start":{"row":14,"column":4},"end":{"row":14,"column":6},"action":"insert","lines":["# "],"id":14},{"start":{"row":15,"column":4},"end":{"row":15,"column":6},"action":"insert","lines":["# "]}],[{"start":{"row":11,"column":4},"end":{"row":11,"column":6},"action":"insert","lines":["# "],"id":15},{"start":{"row":12,"column":4},"end":{"row":12,"column":6},"action":"insert","lines":["# "]}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":70},"action":"remove","lines":["from DeckOfCards import *   # Imports DeckOfCards and Cards to be used"],"id":16},{"start":{"row":0,"column":0},"end":{"row":42,"column":0},"action":"insert","lines":["import random      #brings in random for shuffling","","","class Card(): #creates cards class","    def __init__(self, suit, face, value):","        self.suit = suit","        self.face = face","        self.val = value","        ","    def __str__(self):","        return self.face + \" of \" + self.suit + \", value: \" + str(self.val)","","","class DeckOfCards():    #creates deck of cards class","    def __init__(self):","        self.deck = []","        self.suits = [\"Hearts\", \"Diamonds\", \"Spades\", \"Clubs\"]","        self.faces = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"Jack\", \"Queen\", \"King\", \"Ace\"]","        self.values = [2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10, 11]","        self.play_idx = 0","        ","        for suit in self.suits:","            i = 0","            for i in range(len(self.faces)):","                self.deck.append(Card(suit, self.faces[i], self.values[i]))","                ","                ","    def shuffle_deck(self):     #allows us to shuffle deck","        random.shuffle(self.deck)","        self.play_idx = 0","        ","    def print_deck(self):       #allows us to print deck","        for card in self.deck:","            print(card.face, \"of\", card.suit, end=\", \")","        print(\"---\")","        ","    def get_card(self):     #allows us to get a card from the deck","        self.play_idx += 1","        return self.deck[self.play_idx - 1]","        ","        ","",""]}]]},"ace":{"folds":[],"scrolltop":240,"scrollleft":0,"selection":{"start":{"row":30,"column":8},"end":{"row":30,"column":8},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1709011097690}